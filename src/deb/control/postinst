#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


create_user() {
  if ! id odn-cas > /dev/null 2>&1 ; then
    adduser --system --no-create-home --disabled-password --home /usr/share/odn-cas odn-cas --shell /bin/false
  fi
}

fix_perms() {
    chmod +x  /etc/init.d/odn-cas
    chown  odn-cas /var/cache/odn-cas
    chown  odn-cas /var/tmp/odn-cas
    chown  odn-cas /var/log/odn-cas
}

service_start() {
    update-rc.d odn-cas defaults

    if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
        invoke-rc.d odn-cas restart || true
    else
        service odn-cas restart || true
    fi
}

get_hostname() {
    HOSTNAME=`hostname --all-fqdns`
    if [ -z ${HOSTNAME}  ]
    then
        HOSTNAME=`hostname`
    fi

    if [ -z ${HOSTNAME}  ] 
    then
        HOSTNAME="localhost"
    fi

    HOSTNAME="$(echo "${HOSTNAME}" | tr -d '[[:space:]]')"    
    # return hostname
    echo "$HOSTNAME"
}

generate_keystore() {
    echo ">> generate_keystore"
  
    HOSTNAME=$(get_hostname)
 
    KEYSTORE_NAME=/usr/share/odn-cas/conf/.keystore
    KEYSTORE_PASSWORD="changeit"
    PRIVATEKEY_PASS="changeit"
    DAYS_VALID=730

    openssl req -x509 -days $DAYS_VALID -newkey rsa:2048 -keyout servicekey.pem -out servicecert.pem -passout pass:$KEYSTORE_PASSWORD -subj '/CN='${HOSTNAME}''
    openssl pkcs12 -export -inkey servicekey.pem -in servicecert.pem -out service.p12 -name tomcat -passin pass:$KEYSTORE_PASSWORD -passout pass:$PRIVATEKEY_PASS
    keytool -importkeystore -destkeystore $KEYSTORE_NAME -deststorepass $KEYSTORE_PASSWORD -deststoretype jks -srckeystore service.p12 -srcstorepass $PRIVATEKEY_PASS -srcstoretype pkcs12
    rm *.pem *.p12

    echo "keystore created"
    echo "<< generate_keystore"
} 

set_ldap_evolveum() {

    echo ">> set_ldap"

    chmod +x /usr/share/odn-cas/bin/ldapgenerate 
    chmod +x /usr/share/odn-cas/bin/slapdconf 
    chmod +x /usr/share/odn-cas/bin/slapdadm
    chmod +x /usr/share/odn-cas/bin/ldaptest

    LDAP_DB_PATH=/var/lib/ldap_odn
    chown -R openldap:openldap $LDAP_DB_PATH

    TREE="dc=opendata,dc=org"

    /usr/share/odn-cas/bin/slapdconf create-suffix $TREE --dbDir $LDAP_DB_PATH --rootPassword admin

    /usr/share/odn-cas/bin/slapdconf add-module sssvlv
    /usr/share/odn-cas/bin/slapdconf add-overlay $TREE sssvlv olcSssVlvConfig

    /usr/share/odn-cas/bin/ldapgenerate -D cn=admin,$TREE -w admin -i -s dc=opendata,dc=org

    ldapadd -Y EXTERNAL -H ldapi:/// -f /usr/share/odn-simple/ldap/admin.ldif
    ldapmodify -Y EXTERNAL -H ldapi:/// -f /usr/share/odn-simple/ldap/acl.ldif

    echo "ldap user for IDM created"
    echo "<< set_ldap"
}

case "$1" in
    configure)
        create_user
        fix_perms
        set_ldap_evolveum
        generate_keystore
        service_start
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
